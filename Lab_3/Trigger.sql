CREATE OR REPLACE FUNCTION CHECK_CAPACITY_SPACE_SHIP() RETURNS trigger AS $$
DECLARE
  COUNT_PEOPLE SMALLINT;
  CAPACITY SMALLINT;
BEGIN
  SELECT COUNT(*) INTO COUNT_PEOPLE FROM HUMAN
  WHERE HUMAN.TEAM = NEW.TEAM;
  SELECT SPACE_SHIP.CAPACITY INTO CAPACITY FROM SPACE_SHIP
  JOIN TEAM ON SPACE_SHIP.ID = TEAM.SPACE_SHIP_ID
  WHERE TEAM.ID = NEW.TEAM;
  IF COUNT_PEOPLE >= CAPACITY AND NEW.TEAM IS NOT NULL THEN
    RETURN NULL;
  ELSE
    RETURN NEW;
  END IF;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER CHECK_CAPACITY BEFORE UPDATE OF TEAM OR INSERT
ON HUMAN FOR EACH ROW EXECUTE FUNCTION CHECK_CAPACITY_SPACE_SHIP();

CREATE OR REPLACE FUNCTION CHECK_HUMAN_IN_TEAM() RETURNS trigger AS $$
DECLARE
BEGIN
  UPDATE TEAM SET COUNT_HUMAN = (SELECT COUNT(*) FROM HUMAN WHERE HUMAN.TEAM = TEAM.ID);
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;


CREATE OR REPLACE TRIGGER COUNT_HUMAN_IN_TEAM AFTER UPDATE OF TEAM OR INSERT OR DELETE
ON HUMAN FOR EACH ROW EXECUTE FUNCTION CHECK_HUMAN_IN_TEAM();
